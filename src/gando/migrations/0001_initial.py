# Generated by Django 5.0.1 on 2024-02-03 17:45

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAgentDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_agent_is_mobile', models.IntegerField(blank=True, choices=[(0, 'No'), (1, 'Yes')], null=True, verbose_name='Mobile')),
                ('user_agent_is_tablet', models.IntegerField(blank=True, choices=[(0, 'No'), (1, 'Yes')], null=True, verbose_name='Tablet')),
                ('user_agent_is_touch_capable', models.IntegerField(blank=True, choices=[(0, 'No'), (1, 'Yes')], null=True, verbose_name='TouchCapable')),
                ('user_agent_is_pc', models.IntegerField(blank=True, choices=[(0, 'No'), (1, 'Yes')], null=True, verbose_name='PC')),
                ('user_agent_is_bot', models.IntegerField(blank=True, choices=[(0, 'No'), (1, 'Yes')], null=True, verbose_name='Bot')),
                ('user_agent_browser', models.CharField(blank=True, max_length=255, null=True, verbose_name='Browser')),
                ('user_agent_browser_family', models.CharField(blank=True, max_length=255, null=True, verbose_name='BrowserFamily')),
                ('user_agent_browser_version_string', models.CharField(blank=True, max_length=255, null=True, verbose_name='BrowserVersion')),
                ('user_agent_os', models.CharField(blank=True, max_length=255, null=True, verbose_name='OS')),
                ('user_agent_os_version_string', models.CharField(blank=True, max_length=255, null=True, verbose_name='OSVersion')),
                ('user_agent_device', models.CharField(blank=True, max_length=255, null=True, verbose_name='Device')),
                ('user_agent_device_family', models.CharField(blank=True, max_length=255, null=True, verbose_name='DeviceFamily')),
                ('geoip_ip', models.CharField(blank=True, max_length=255, null=True, verbose_name='IP')),
                ('geoip_country_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='CountryCode')),
                ('geoip_country_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='CountryName')),
                ('geoip_area_code', models.IntegerField(blank=True, null=True, verbose_name='AreaCode')),
                ('geoip_city', models.CharField(blank=True, max_length=255, null=True, verbose_name='City')),
                ('geoip_country_code3', models.CharField(blank=True, max_length=255, null=True, verbose_name='CountryCode3')),
                ('geoip_dma_code', models.IntegerField(blank=True, null=True, verbose_name='DMACode')),
                ('geoip_latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('geoip_longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('geoip_postal_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='PostalCode')),
                ('geoip_region', models.CharField(blank=True, max_length=255, null=True, verbose_name='Region')),
                ('geoip_time_zone', models.CharField(blank=True, max_length=255, null=True, verbose_name='TimeZone')),
                ('geoip_geos_x', models.FloatField(blank=True, null=True, verbose_name='GEOS.x')),
                ('geoip_geos_y', models.FloatField(blank=True, null=True, verbose_name='GEOS.y')),
                ('created_dt', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Datetime')),
                ('key', models.CharField(blank=True, db_index=True, max_length=255, null=True, unique=True, verbose_name='key')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='uad', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'UserAgentDevice',
                'verbose_name_plural': 'UserAgentDevices',
            },
        ),
    ]
